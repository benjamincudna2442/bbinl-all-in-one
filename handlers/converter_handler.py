import os
import requests
from moviepy.editor import VideoFileClip

VIDEO_PATH = "temp_video.mp4"
RESIZED_VIDEO_PATH = "temp_video_resized.mp4"
AUDIO_PATH = "output_audio.mp3"

MAX_FILE_SIZE_MB = 50
MAX_DURATION = 60  # seconds

def cleanup_files():
    for file in [VIDEO_PATH, RESIZED_VIDEO_PATH, AUDIO_PATH]:
        if os.path.exists(file):
            os.remove(file)

def register(bot, custom_command_handler, command_prefixes_list): 
    @custom_command_handler("convert")
    def convert_handler(message):
        try:
            file_url = None

            command_text_full = message.text.split(" ", 1)[0].lower()
            actual_command_len = 0
            for prefix in command_prefixes_list: 
                if command_text_full.startswith(f"{prefix}convert"):
                    actual_command_len = len(f"{prefix}convert")
                    break

            args_after_command = message.text[actual_command_len:].strip()

            if message.reply_to_message and message.reply_to_message.video:
                file_id = message.reply_to_message.video.file_id
                file_info = bot.get_file(file_id)
                file_url = f"https://api.telegram.org/file/bot{bot.token}/{file_info.file_path}"
            elif args_after_command:
                file_url = args_after_command
            else:

                bot.reply_to(message, f"‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶´‡¶æ‡¶á‡¶≤ ‡¶∞‡¶ø‡¶™‡ßç‡¶≤‡¶æ‡¶á ‡¶ï‡¶∞‡ßã ‡¶Ö‡¶•‡¶¨‡¶æ `{command_prefixes_list[0]}convert [‡¶≠‡¶ø‡¶°‡¶ø‡¶ì URL]` ‡¶≤‡¶ø‡¶ñ‡ßá ‡¶™‡¶æ‡¶†‡¶æ‡¶ì‡•§\n‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶£: `{command_prefixes_list[0]}convert https://example.com/video.mp4`", parse_mode="Markdown") 
                return

            if not file_url:
                bot.reply_to(message, "‡¶≠‡¶ø‡¶°‡¶ø‡¶ì URL ‡¶™‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º‡¶®‡¶ø‡•§")
                return

            bot.reply_to(message, "‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá, ‡¶Ö‡¶™‡ßá‡¶ï‡ßç‡¶∑‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®...")

            # ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶°
            r = requests.get(file_url, stream=True)
            r.raise_for_status()
            with open(VIDEO_PATH, "wb") as f:
                for chunk in r.iter_content(chunk_size=1024*1024):
                    if chunk:
                        f.write(chunk)

            clip = VideoFileClip(VIDEO_PATH)

            # ‡¶°‡¶ø‡¶â‡¶∞‡ßá‡¶∂‡¶® ‡¶ö‡ßá‡¶ï, ‡¶™‡ßç‡¶∞‡¶Ø‡¶º‡ßã‡¶ú‡¶®‡ßá ‡¶ï‡¶æ‡¶ü‡¶æ
            if clip.duration > MAX_DURATION:
                original_duration = clip.duration
                clip = clip.subclip(0, MAX_DURATION)
                bot.send_message(message.chat.id, f"‚ö†Ô∏è ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì‡¶∞ ‡¶¶‡ßà‡¶∞‡ßç‡¶ò‡ßç‡¶Ø {original_duration:.2f} ‡¶∏‡ßá‡¶ï‡ßá‡¶®‡ßç‡¶°, ‡¶Ø‡¶æ {MAX_DURATION} ‡¶∏‡ßá‡¶ï‡ßá‡¶®‡ßç‡¶°‡ßá‡¶∞ ‡¶¨‡ßá‡¶∂‡¶ø‡•§ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì‡¶ü‡¶ø ‡¶™‡ßç‡¶∞‡¶•‡¶Æ {MAX_DURATION} ‡¶∏‡ßá‡¶ï‡ßá‡¶®‡ßç‡¶°‡ßá ‡¶ï‡¶æ‡¶ü‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§")

            clip = clip.resize(height=480)

            # ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶∞‡¶ø‡¶∏‡¶æ‡¶á‡¶ú ‡¶´‡¶æ‡¶á‡¶≤ ‡¶∏‡ßá‡¶≠ ‡¶ï‡¶∞‡¶æ
            bot.send_message(message.chat.id, "‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶™‡ßç‡¶∞‡¶∏‡ßá‡¶∏ ‡¶ï‡¶∞‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá...")
            clip.write_videofile(RESIZED_VIDEO_PATH, codec='libx264', audio_codec='aac', verbose=False, logger=None)

            # ‡¶®‡¶§‡ßÅ‡¶® ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶•‡ßá‡¶ï‡ßá ‡¶Ö‡¶°‡¶ø‡¶ì ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡¶æ
            bot.send_message(message.chat.id, "‡¶Ö‡¶°‡¶ø‡¶ì ‡¶è‡¶ï‡ßç‡¶∏‡¶ü‡ßç‡¶∞‡ßç‡¶Ø‡¶æ‡¶ï‡ßç‡¶ü ‡¶ï‡¶∞‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá...")
            clip_resized = VideoFileClip(RESIZED_VIDEO_PATH)
            clip_resized.audio.write_audiofile(AUDIO_PATH, bitrate="64k", verbose=False, logger=None)

            audio_size_mb = os.path.getsize(AUDIO_PATH) / (1024 * 1024)
            if audio_size_mb > MAX_FILE_SIZE_MB:
                bot.reply_to(message, f"‡¶´‡¶æ‡¶á‡¶≤ ‡¶∏‡¶æ‡¶á‡¶ú {audio_size_mb:.2f}MB, ‡¶Ø‡¶æ ‡¶Ö‡¶®‡ßÅ‡¶Æ‡ßã‡¶¶‡¶ø‡¶§ ‡¶∏‡¶æ‡¶á‡¶ú ({MAX_FILE_SIZE_MB}MB) ‡¶è‡¶∞ ‡¶¨‡ßá‡¶∂‡¶ø‡•§ ‡¶õ‡ßã‡¶ü ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§")
                cleanup_files()
                return

            with open(AUDIO_PATH, "rb") as audio_file:
                bot.send_audio(message.chat.id, audio_file, caption="üéµ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶•‡ßá‡¶ï‡ßá ‡¶ï‡¶®‡¶≠‡¶æ‡¶∞‡ßç‡¶ü ‡¶ï‡¶∞‡¶æ ‡¶Ö‡¶°‡¶ø‡¶ì‡•§")

            cleanup_files()

        except Exception as e:
            bot.reply_to(message, f"‚ùå ‡¶è‡¶∞‡¶∞ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá: {str(e)}")
            print(f"Converter Error: {e}")
            cleanup_files()